<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Traindrop</title>
    <description>Enseigner le code et en particulier le front-end</description>
    <link>http://traindrop.github.io//</link>
    <atom:link href="http://traindrop.github.io//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 02 Apr 2016 18:57:11 +0200</pubDate>
    <lastBuildDate>Sat, 02 Apr 2016 18:57:11 +0200</lastBuildDate>
    <generator>Jekyll v3.0.3</generator>
    
      <item>
        <title>Media Queries &amp; Images RWD</title>
        <description>&lt;main&gt;
&lt;h2&gt;Acte 1&lt;/h2&gt;

&lt;p&gt;Vous êtes à la tête d&#39;un nouveau projet RWD. Il s&#39;agit d&#39;un projet monopage proposant un en-tête d&#39;accueil puis une série d&#39;épisodes ou chapîtres, contenant chacun un titre, du contenu, mais également des informations additionnelles.&lt;/p&gt;

&lt;div class=&quot;assets&quot;&gt;
	&lt;p&gt;Sur les écrans d&#39;une largeur inférieure ou égale à 740 pixels, l&#39;ensemble des éléments ne forme qu&#39;une colonne. On trouve successivement l&#39;en-tête (en violet sur le schéma), puis le contenu principal et enfin les informations additionnelles (en rose).&lt;/p&gt;

	&lt;a href=&quot;assets/740.png&quot;&gt;&lt;img src=&quot;assets/740.png&quot; alt=&quot;&quot; style=&quot;height:300px&quot;/&gt;&lt;/a&gt;

	&lt;p&gt;Sur les écrans dont la largeur est comprise entre 741 et 1023 pixels, l&#39;agencement de l&#39;en-tête évolue (faisant notamment apparaître les liens de partage sociaux) et les photos sont positionnées latéralement dans le contenu principal.&lt;/p&gt;

	&lt;a href=&quot;assets/1024.png&quot;&gt;&lt;img src=&quot;assets/1024.png&quot; alt=&quot;&quot; style=&quot;height:300px&quot;/&gt;&lt;/a&gt;

	&lt;p&gt;Enfin, sur les écrans dont la largeur est supérieure ou égale à 1024 pixels, l&#39;agencement de l&#39;en-tête évolue à nouveau mais c&#39;est surtout la position des données additionnelles qui se voit modifiée, profitant de la largeur nouvellement acquise pour venir se nicher sur la droite du coeur du contenu principal.&lt;/p&gt;

	&lt;a href=&quot;assets/1280.png&quot;&gt;&lt;img src=&quot;assets/1280.png&quot; alt=&quot;&quot; style=&quot;height:300px&quot;/&gt;&lt;/a&gt;

	&lt;blockquote&gt;Réalisez l&#39;intégration HTML de ce site RWD.&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;solution&quot;&gt;
	&lt;p&gt;Pour les images, utilisez des &lt;em&gt;placeholder&lt;/em&gt;  &lt;sup id=&quot;cite-note-ressource1&quot;&gt;&lt;a href=&quot;#cite-ressource1&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt;. Pour le texte, du texte de substitution &lt;sup id=&quot;cite-note-ressource2&quot;&gt;&lt;a href=&quot;#cite-ressource2&quot;&gt;[2]&lt;/a&gt;&lt;/sup&gt; en Arial à 1em.&lt;/p&gt;
	&lt;p&gt;Concernant le processus d&#39;élaboration des CSS, de nombreux auteurs conseillent de démarrer par la largeur mobile. A votre avis, pourquoi ?&lt;/p&gt;
	&lt;p&gt;Enfin, envisagez d&#39;utiliser un pré-processeur (cela pourra vous être utile par la suite), par exemple SASS (SCSS) &lt;sup id=&quot;cite-note-ressource3&quot;&gt;&lt;a href=&quot;#cite-ressource3&quot;&gt;[3]&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;/div&gt;

&lt;h2&gt;Acte 2&lt;/h2&gt;
&lt;p&gt;
	Certains visiteurs du site sont myopes et ont tendance à agrandir considérablement la taille de police par défaut. Essayez. Que se passe-t-il ?
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&quot;assets&quot;&gt;
	&lt;blockquote&gt;
		Reprenez vos CSS et vérifiez qu&#39;elles utilisent des unités relatives (en partant du principe que la taille de police par défaut est de 16px) &lt;sup id=&quot;cite-note-ressource4&quot;&gt;&lt;a href=&quot;#cite-ressource4&quot;&gt;[4]&lt;/a&gt;&lt;/sup&gt;.
	&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;solution&quot;&gt;
	Pour toute une populaiton d&#39;intégrateurs, les unités &lt;code&gt;em&lt;/code&gt; ne sont pas instinctives. Vous pouvez utiliser une fonction spécifique traduisant les pixels en unités relatives. Dans certains contextes, cela améliorera la maintenance en facilitant la relecture.
&lt;/div&gt;

&lt;h2&gt;Acte 3&lt;/h2&gt;
&lt;p&gt;
	De nombreux visiteurs consultent le site sur mobile, mais se plaignent de lenteurs, principalement liées au chargement des images, tandis que d&#39;autres se plaignent d&#39;images floues.
&lt;/p&gt;
&lt;div class=&quot;assets&quot;&gt;
	&lt;blockquote&gt;
		Reprenez votre code et vérifiez que les images sont incluses de manière à être pertinentes au regard des ratios de pixels des matériels utilisés.
	&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/main&gt;
&lt;footer&gt;
&lt;h1&gt;Ressources&lt;/h1&gt;
&lt;ol&gt;
	&lt;li id=&quot;cite-ressource1&quot;&gt;&lt;a href=&quot;#cite-note-ressource1&quot;&gt;^&lt;/a&gt; Il existe de nombreux services fournissant des images de substitution comme&amp;nbsp;: &lt;a href=&quot;http://placekitten.com/&quot;&gt;PlaceKitten&lt;/a&gt;, &lt;a href=&quot;http://placehold.it/&quot;&gt;Placehold.it&lt;/a&gt; ou &lt;a href=&quot;http://lorempixum.com/&quot;&gt;LoremPixum&lt;/a&gt;.&lt;/li&gt;
	&lt;li id=&quot;cite-ressource2&quot;&gt;&lt;a href=&quot;#cite-note-ressource2&quot;&gt;^&lt;/a&gt; Il existe de nombreux générateurs de faux texte en ligne, plus ou moins proches du Lorem Ipsum. Par exemple&amp;nbsp;: &lt;a href=&quot;http://loripsum.net/&quot;&gt;LORIPSUM.NET&lt;/a&gt;&lt;/li&gt;
	&lt;li id=&quot;cite-ressource3&quot;&gt;&lt;a href=&quot;#cite-note-ressource3&quot;&gt;^&lt;/a&gt; &quot;&lt;a href=&quot;http://sass-lang.com/&quot;&gt;SASS&lt;/a&gt;, CSS with superpowers&quot;.&lt;/li&gt;
	&lt;li id=&quot;cite-ressource4&quot;&gt;&lt;a href=&quot;#cite-note-ressource4&quot;&gt;^&lt;/a&gt; &lt;a href=&quot;http://pxtoem.com/&quot;&gt;PXtoEM.com&lt;/a&gt; affiche une abaque pour la conversion de &lt;code&gt;px&lt;/code&gt; vers &lt;code&gt;em&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;/footer&gt;
</description>
        <pubDate>Thu, 01 Jan 2015 00:00:00 +0100</pubDate>
        <link>http://traindrop.github.io//fiches/005/</link>
        <guid isPermaLink="true">http://traindrop.github.io//fiches/005/</guid>
        
        
        <category>Responsive Web Design</category>
        
      </item>
    
      <item>
        <title>Images fluides</title>
        <description>&lt;main&gt;
&lt;h2&gt;Acte 1&lt;/h2&gt;

&lt;p&gt;Vous disposez d&#39;une grille fluide réalisée avec &lt;code&gt;float&lt;/code&gt;. Nous allons insérer dans cette grille une image.&lt;/p&gt;

&lt;p&gt;Nous allons partir du code HTML suivant&amp;nbsp;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;div class=&amp;quot;grille&amp;quot;&amp;gt;
  &amp;lt;div class=&amp;quot;ligne&amp;quot;&amp;gt;
    &amp;lt;div class=&amp;quot;col-8-12&amp;quot;&amp;gt;
      &amp;lt;p&amp;gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Non quam nostram quidem, inquit Pomponius iocans; Tum Piso: Quoniam igitur aliquid omnes, quid Lucius noster? Duo Reges: constructio interrete. Nam quid possumus facere melius? Sint ista Graecorum; Cur id non ita fit? Non semper, inquam; Huius ego nunc auctoritatem sequens idem faciam. Proclivi currit oratio. Eodem modo is enim tibi nemo dabit, quod, expetendum sit, id esse laudabile. Si mala non sunt, iacet omnis ratio Peripateticorum.&amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div class=&amp;quot;col-4-12 texture&amp;quot;&amp;gt;
      &amp;lt;p&amp;gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Non quam nostram quidem, inquit Pomponius iocans; Tum Piso: Quoniam igitur aliquid omnes, quid Lucius noster? Duo Reges: constructio interrete. Nam quid possumus facere melius? Sint ista Graecorum; Cur id non ita fit? Non semper, inquam; Huius ego nunc auctoritatem sequens idem faciam. Proclivi currit oratio. Eodem modo is enim tibi nemo dabit, quod, expetendum sit, id esse laudabile. Si mala non sunt, iacet omnis ratio Peripateticorum.&amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Auquel nous allons ajouter le code nécessaire à la réalisation d&#39;une grille fluide avec &lt;code&gt;float&lt;/code&gt; : en &lt;a href=&quot;http://traindrop.github.io/fiches/data/002/example/css/style.css&quot; title=&quot;Feuille de style CSS pour une grille RWD en float&quot;&gt;CSS&lt;/a&gt; ou &lt;a href=&quot;http://traindrop.github.io/fiches/data/002/example/scss/style.scss&quot; title=&quot;Feuille de style SCSS pour une grille RWD en float&quot;&gt;SCSS&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;assets&quot;&gt;
	&lt;blockquote&gt;Faites en sorte d&#39;insérer l&#39;image suivante dans la colonne de droite, à la place du texte de substitution. L&#39;image doit se redimensionner en même temps que la colonne pour être toujours visible et ne jamais déborder.&lt;/blockquote&gt;
	&lt;img src=&quot;assets/kitty.jpg&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;294&quot;/&gt;
&lt;/div&gt;
&lt;div class=&quot;solution&quot;&gt;
	&lt;p&gt;Il existe différentes manière d&#39;insérer une image. N&#39;hésitez pas à utiliser dès à présent la syntaxe &lt;code&gt;figure&lt;/code&gt; &lt;sup id=&quot;cite-note-ressource1&quot;&gt;&lt;a href=&quot;#cite-ressource1&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt; introduite par HTML5.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;proposition&quot;&gt;
	&lt;p&gt;Proposition de solution (CSS)&amp;nbsp;: un simple &lt;code&gt;max-width&lt;/code&gt; devrait suffire à faire en sorte que l&#39;ensemble de l&#39;image s&#39;affiche dans la largeur de la colonne, peu importe la situation.&lt;/p&gt;
		&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;figure img {
  max-width: 100%;
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2&gt;Acte 2&lt;/h2&gt;
&lt;p&gt;
	Le Directeur Artistique appelle et vous donne la consigne de ne pas redimensionner l&#39;image. Le contenu pertinent étant déjà à gauche, il souhaiterait que l&#39;image ne soit pas réduite mais plutôt coupée à droite.&lt;/p&gt;
&lt;p&gt;
&lt;div class=&quot;assets&quot;&gt;
	&lt;blockquote&gt;
		Faites en sorte que la plus grande portion visible puisse tenir dans la colonne, sans que le contenu ne se redimensionne.
	&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;solution&quot;&gt;
	Pensez à la notion de &lt;em&gt;container&lt;/em&gt; et de masque&amp;#8230;
&lt;/div&gt;
&lt;div class=&quot;proposition&quot;&gt;
	&lt;p&gt;L&#39;avantage d&#39;utiliser la structure HTML5 &lt;code&gt;figure&lt;/code&gt; / &lt;code&gt;figcaption&lt;/code&gt;, c&#39;est qu&#39;elle met d&#39;emblée en place un &lt;em&gt;container&lt;/em&gt; pour l&#39;image :&lt;/p&gt;
	&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;figure&amp;gt;
  &amp;lt;img src=&amp;quot;/assets/kitty.jpg&amp;quot; alt=&amp;quot;&amp;quot; /&amp;gt;
  &amp;lt;figcaption&amp;gt;Ceci est un chat&amp;lt;/figcaption&amp;gt;
&amp;lt;/figure&amp;gt;&lt;/code&gt;&lt;/pre&gt;
	&lt;p&gt;Il est donc possible d&#39;utiliser ce &lt;em&gt;container&lt;/em&gt; comme un masque, en partant du principe que l&#39;image ne changera pas de taille mais que seule la portion située à l&#39;intérieur du masque sera visible :&lt;/p&gt;
	&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;figure {
  overflow: hidden;
}

figure img {
  display:block;
  max-width: auto;
}&lt;/code&gt;&lt;/pre&gt;
	&lt;p&gt;En revanche, cette approche pose un problème lors du redimensionnement, puis les &lt;code class=&quot;css&quot;&gt;padding&lt;/code&gt; du &lt;em&gt;container&lt;/em&gt; (ici &lt;code&gt;figure&lt;/code&gt;) ne sont pas pris en compte. Il faudrait donc idéalement ajouter un &lt;em&gt;container&lt;/em&gt; supplémentaire entre la colonne et &lt;code&gt;figure&lt;/code&gt; pour appliquer les &lt;code class=&quot;css&quot;&gt;padding&lt;/code&gt; nécessaires.&lt;/p&gt;
&lt;/div&gt;

&lt;h2&gt;Acte 3&lt;/h2&gt;

&lt;div class=&quot;assets&quot;&gt;
	&lt;blockquote&gt;
		Le graphiste fournit une texture à appliquer en &lt;code&gt;background&lt;/code&gt; de notre page, qui permet d&#39;habiller nos deux colonnes :
	&lt;/blockquote&gt;
	&lt;img src=&quot;assets/texture900_bicolor.png&quot; alt=&quot;&quot; height=&quot;300&quot;/&gt;
	&lt;p&gt;Appliquez cette texture comme &lt;code&gt;background&lt;/code&gt; centré de votre page. Quels sont les deux problèmes soulevés par cette image de background ?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;proposition&quot;&gt;
	&lt;p&gt;L&#39;inclusion d&#39;un background centré est relativement simple, il s&#39;agit de poser une image de background, à 50% de la référence horizontale et qui se répète sur la hauteur.&lt;/p&gt;
	&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;body {
  background: #446CB3 url(&quot;/assets/texture900_bicolor.png&quot;) repeat-y 50% 0;
}&lt;/code&gt;&lt;/pre&gt;
	&lt;p&gt;
		Manifestement, ce background n&#39;est pas utilisable pour des sites de plus de 900 pixels (la largeur du PNG). Au delà de cette taille, le fond apparait. De plus, le positionnement centré n&#39;est pas efficace : plus on réduit la fenêtre en dessous de 900 pixels, moins le background sépare les colonnes de manière fidèle&amp;#8230;
	&lt;/p&gt;
&lt;/div&gt;

&lt;h2&gt;Acte 4&lt;/h2&gt;

&lt;div class=&quot;assets&quot;&gt;
	&lt;blockquote&gt;
		Afin de supporter les écrans de plus de 900 pixels, le graphiste renvoie une version du &lt;code&gt;background&lt;/code&gt; de 3000 pixels de large. Modifiez votre code pour que le &lt;code&gt;background&lt;/code&gt; soit correctement posé, quelle que soit la largeur du &lt;code&gt;viewport&lt;/code&gt; sous les 3000 pixels.
	&lt;/blockquote&gt;
	&lt;img src=&quot;assets/texture3000_bicolor.png&quot; alt=&quot;&quot; height=&quot;300&quot;/&gt;
&lt;/div&gt;
&lt;div class=&quot;proposition&quot;&gt;
	&lt;p&gt;Le &lt;code&gt;background&lt;/code&gt; est constitué de 2000 pixels correspondant à la colonne de gauche et 1000 pixels correspondant à la colonne de droite, soit 66.66% pour la gauche et 33.33% pour la droite. L&#39;astuce est de positionner le &lt;code&gt;background&lt;/code&gt; par rapport à cette verticale de séparation, pas par rapport au centre de la page.&lt;/p&gt;
	&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;body {
  background: #446CB3 url(&quot;/assets/texture900_bicolor.png&quot;) repeat-y 66.66% 0;
}&lt;/code&gt;&lt;/pre&gt;
	&lt;p&gt;Vous trouverez ici une solution complète : &lt;a href=&quot;example/&quot; target=&quot;_blank&quot;&gt;voir la démo&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/main&gt;
&lt;footer&gt;
&lt;h1&gt;Ressources&lt;/h1&gt;
&lt;ol&gt;
	&lt;li id=&quot;cite-ressource1&quot;&gt;&lt;a href=&quot;#cite-note-ressource1&quot;&gt;^&lt;/a&gt; &lt;a href=&quot;https://developer.mozilla.org/fr/docs/Web/HTML/Element/figure&quot;&gt;figure&lt;/a&gt;, sur &lt;a href=&quot;https://developer.mozilla.org/fr/&quot;&gt;MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/footer&gt;
</description>
        <pubDate>Thu, 01 Jan 2015 00:00:00 +0100</pubDate>
        <link>http://traindrop.github.io//fiches/004/</link>
        <guid isPermaLink="true">http://traindrop.github.io//fiches/004/</guid>
        
        
        <category>Responsive Web Design</category>
        
      </item>
    
      <item>
        <title>Construire une grille fluide avec &lt;code&gt;flexbox&lt;/code&gt;</title>
        <description>&lt;main&gt;
&lt;h2&gt;Acte 1&lt;/h2&gt;

&lt;p&gt;Nous allons construire ensemble une grille fluide, c&#39;est-à-dire une CSS définissant une collection de classes qui nous permettront d&#39;organiser, au sein d&#39;un certain bloc, le contenu en colonnes et en gouttières. L&#39;idée est de pouvoir très simplement définir que tel contenu occupe ½, ⅓, ⅙… de la largeur disponible, quelle que soit la largeur du &lt;code&gt;viewport&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Notre grille n&#39;occupera pas nécessairement tout l&#39;espace, mais peut-être qu&#39;une partie du site. Nous allons donc l&#39;embarquer dans un élément de type bloc, un &lt;em&gt;container&lt;/em&gt;, dont nous considérerons qu&#39;il est &quot;large à 100%&quot;, il sera la base de notre grille. Notez que si cet élément est le seul élément du &lt;code&gt;body&lt;/code&gt;, alors tout se passera comme si la grille occupait toute la largeur disponible car, par défaut, cet élément de type bloc occupera véritablement toute la largeur.&lt;/p&gt;
&lt;p&gt;Notre dernière contrainte sera d&#39;utiliser le &lt;strong&gt;module Flexbox&lt;/strong&gt;, introduit par CSS3 et &lt;time datetime=&quot;2015-01-01T10:50+02:00&quot;&gt;aujourd&#39;hui&lt;/time&gt; compatible avec une majorité de navigateurs.&lt;/p&gt;
&lt;p&gt;Nous allons partir du code HTML suivant&amp;nbsp;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html hljs xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-value&quot;&gt;&quot;grille&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;hljs-comment&quot;&gt;&amp;lt;!-- 100% large --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&quot;assets&quot;&gt;
    &lt;blockquote&gt;
        Mettez en place deux colonnes de contenu. Le contenu principal occupe ⅔ de la largeur disponible, le contenu latéral, ⅓.
    &lt;/blockquote&gt;
    &lt;pre&gt;&lt;code class=&quot;html hljs xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-value&quot;&gt;&quot;grille&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-value&quot;&gt;&quot;col-2-3&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Contenu principal&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-title&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-value&quot;&gt;&quot;col-1-3&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Contenu latéral&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-title&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;solution&quot;&gt;
    &lt;p&gt;Pour faire en sorte d&#39;afficher les deux zones l&#39;une à côté de l&#39;autre, il faut commencer par définir le &lt;em&gt;container&lt;/em&gt; comme un objet &lt;code class=&quot;css&quot;&gt;flexbox&lt;/code&gt; puis configurer ses options &lt;code class=&quot;css&quot;&gt;flex-direction&lt;/code&gt; et &lt;code class=&quot;css&quot;&gt;flex-wrap&lt;/code&gt;.&lt;/p&gt;
    &lt;p&gt;Il faut ensuite définir la largeur des colonnes. Vous utiliserez pour cela la syntaxe &lt;code class=&quot;css&quot;&gt;flex&lt;/code&gt; &lt;sup id=&quot;cite-note-ressource1&quot;&gt;&lt;a href=&quot;#cite-ressource1&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt;&amp;nbsp;:&lt;/p&gt;
    &lt;pre&gt;&lt;code class=&quot;css hljs&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;flex&lt;/span&gt;: &amp;lt;&#39;&lt;span class=&quot;hljs-tag&quot;&gt;flex-grow&lt;/span&gt;&#39;&amp;gt; &amp;lt;&#39;&lt;span class=&quot;hljs-tag&quot;&gt;flex-shrink&lt;/span&gt;&#39;&amp;gt; &amp;lt;&#39;&lt;span class=&quot;hljs-tag&quot;&gt;flex-basis&lt;/span&gt;&#39;&amp;gt; &lt;/code&gt;&lt;/pre&gt;
    &lt;p&gt;Lisez la documentation et expliquez la valeur à donner à chaque paramètre pour fortement maitriser la largeur d&#39;un contenu par rapport à la largeur de son &lt;em&gt;container&lt;/em&gt;&lt;/p&gt;.
&lt;/div&gt;
&lt;div class=&quot;proposition&quot; style=&quot;display: block;&quot;&gt;
    &lt;p&gt;Proposition de solution&amp;nbsp;:&lt;/p&gt;
        &lt;pre&gt;&lt;code class=&quot;css hljs&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;.grille&lt;/span&gt; &lt;span class=&quot;hljs-rules&quot;&gt;{
  &lt;span class=&quot;hljs-rule&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;:&lt;span class=&quot;hljs-value&quot;&gt; flex&lt;/span&gt;&lt;/span&gt;;
  &lt;span class=&quot;hljs-rule&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;flex-direction&lt;/span&gt;:&lt;span class=&quot;hljs-value&quot;&gt; row&lt;/span&gt;&lt;/span&gt;;
  &lt;span class=&quot;hljs-rule&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;flex-wrap&lt;/span&gt;:&lt;span class=&quot;hljs-value&quot;&gt; wrap&lt;/span&gt;&lt;/span&gt;;
&lt;span class=&quot;hljs-rule&quot;&gt;}&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;hljs-class&quot;&gt;.col-2-3&lt;/span&gt; &lt;span class=&quot;hljs-rules&quot;&gt;{
  &lt;span class=&quot;hljs-rule&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;flex&lt;/span&gt;:&lt;span class=&quot;hljs-value&quot;&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;66.66%&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;
&lt;span class=&quot;hljs-rule&quot;&gt;}&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;hljs-class&quot;&gt;.col-1-3&lt;/span&gt; &lt;span class=&quot;hljs-rules&quot;&gt;{
  &lt;span class=&quot;hljs-rule&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;flex&lt;/span&gt;:&lt;span class=&quot;hljs-value&quot;&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;33.33%&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;
&lt;span class=&quot;hljs-rule&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
    &lt;p&gt;En mettant 0 comme valeur pour &lt;code class=&quot;css&quot;&gt;flex-grow&lt;/code&gt; et &lt;code class=&quot;css&quot;&gt;flex-shrink&lt;/code&gt;, on s&#39;assure que l&#39;élément ne s&#39;adaptera pas ni à une largeur plus élevée (pour remplir) ni à une largeur plus faible (pour mieux s&#39;insérer).&lt;/p&gt;
&lt;/div&gt;

&lt;h2&gt;Acte 2&lt;/h2&gt;
&lt;p&gt;
    Si vous remplacez les contenus par du Lorem Ipsum &lt;sup id=&quot;cite-note-ressource2&quot;&gt;&lt;a href=&quot;#cite-ressource2&quot;&gt;[2]&lt;/a&gt;&lt;/sup&gt;, par exemple, vous allez vite vous rendre compte d&#39;un problème&amp;nbsp;: le texte d&#39;un élément continue jusqu&#39;au contenu suivant, ce qui n&#39;est pas très agréable à l&#39;oeil. Nous allons donc mettre en place des gouttières de 20px, qui permettront d&#39;aérer le contenu.&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;&lt;div class=&quot;assets&quot;&gt;
    &lt;blockquote&gt;
        Définissez des gouttières de 20px de large entre les contenus. Attention, les gouttières ne sont qu&#39;entre les contenus… ni à gauche, ni à droite de la grille.
    &lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;solution&quot;&gt;
    &lt;p&gt;Vous rencontrez des problèmes pour faire rentrer vos contenus en largeur ? C&#39;est normal, c&#39;est à cause du modèle de boîtes par défaut. Pour simplifier la mise en place, appliquez à l&#39;ensemble des éléments la règle &lt;code class=&quot;html&quot;&gt;box-sizing: border-box;&lt;/code&gt; &lt;sup id=&quot;cite-note-ressource3&quot;&gt;&lt;a href=&quot;#cite-ressource3&quot;&gt;[3]&lt;/a&gt;&lt;/sup&gt; afin que la largeur définie d&#39;un contenu soit véritablement sa largeur, indépendamment des &lt;code class=&quot;html&quot;&gt;padding&lt;/code&gt; et des &lt;code class=&quot;html&quot;&gt;border&lt;/code&gt; appliqués.&lt;/p&gt;
    &lt;figure&gt;
        &lt;img src=&quot;assets/with-box-model.png&quot; alt=&quot;Description visuelle de l&#39;impact de box-sizing: border-box;&quot; width=&quot;704&quot; height=&quot;504&quot;&gt;
        &lt;figcaption&gt;Avec &lt;code&gt;box-sizing: border-box;&lt;/code&gt; les bordures et les paddings sont dessinés à l&#39;intérieur de la largeur de contenu définie. Les marges sont dessinées à l&#39;extérieur. Original par &lt;a href=&quot;http://www.adamkaplan.me/grid/&quot;&gt;Adam Kaplan&lt;/a&gt;&lt;/figcaption&gt;.
    &lt;/figure&gt;
&lt;/div&gt;
&lt;div class=&quot;proposition&quot; style=&quot;display: block;&quot;&gt;
    &lt;p&gt;Proposition de solution pour la mise en place de  &lt;code class=&quot;html&quot;&gt;box-sizing: border-box;&lt;/code&gt; &lt;sup id=&quot;cite-note-ressource4&quot;&gt;&lt;a href=&quot;#cite-ressource4&quot;&gt;[4]&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;
        &lt;pre&gt;&lt;code class=&quot;css hljs&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;hljs-rules&quot;&gt;{
    &lt;span class=&quot;hljs-rule&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;-webkit-box-sizing&lt;/span&gt;:&lt;span class=&quot;hljs-value&quot;&gt; border-box&lt;/span&gt;&lt;/span&gt;;
    &lt;span class=&quot;hljs-rule&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;-moz-box-sizing&lt;/span&gt;:&lt;span class=&quot;hljs-value&quot;&gt; border-box&lt;/span&gt;&lt;/span&gt;;
    &lt;span class=&quot;hljs-rule&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;box-sizing&lt;/span&gt;:&lt;span class=&quot;hljs-value&quot;&gt; border-box&lt;/span&gt;&lt;/span&gt;;
&lt;span class=&quot;hljs-rule&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
*, *&lt;span class=&quot;hljs-pseudo&quot;&gt;:before&lt;/span&gt;, *&lt;span class=&quot;hljs-pseudo&quot;&gt;:after&lt;/span&gt; &lt;span class=&quot;hljs-rules&quot;&gt;{
    &lt;span class=&quot;hljs-rule&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;box-sizing&lt;/span&gt;:&lt;span class=&quot;hljs-value&quot;&gt; inherit&lt;/span&gt;&lt;/span&gt;;
&lt;span class=&quot;hljs-rule&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
        &lt;/code&gt;&lt;/pre&gt;
    &lt;p&gt;Puis pour la mise en place des gouttières, nous pourrions utiliser &lt;code class=&quot;css&quot;&gt;last-of-type&lt;/code&gt;&amp;nbsp;:&lt;/p&gt;
        &lt;pre&gt;&lt;code class=&quot;css hljs&quot;&gt;&lt;span class=&quot;hljs-attr_selector&quot;&gt;[class*=&#39;col-&#39;]&lt;/span&gt; &lt;span class=&quot;hljs-rules&quot;&gt;{
    &lt;span class=&quot;hljs-rule&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;padding-right&lt;/span&gt;:&lt;span class=&quot;hljs-value&quot;&gt; &lt;span class=&quot;hljs-number&quot;&gt;20px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;
&lt;span class=&quot;hljs-rule&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;hljs-attr_selector&quot;&gt;[class*=&#39;col-&#39;]&lt;/span&gt;&lt;span class=&quot;hljs-pseudo&quot;&gt;:last-of-type&lt;/span&gt; &lt;span class=&quot;hljs-rules&quot;&gt;{
    &lt;span class=&quot;hljs-rule&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;padding-right&lt;/span&gt;:&lt;span class=&quot;hljs-value&quot;&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;
&lt;span class=&quot;hljs-rule&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
    &lt;p&gt;
        Cependant cela posera problème assez rapidement si nous avons des éléments d&#39;une largeur suffisante pour passer à la ligne... car alors le &lt;code class=&quot;css&quot;&gt;last-of-type&lt;/code&gt; ne concernera pas les éléments situés à droite ou à gauche mais uniquement le dernier élément. Mieux vaut donc jouer avec la marge du &lt;em&gt;container&lt;/em&gt; :&lt;/p&gt;
    &lt;pre&gt;&lt;code class=&quot;css hljs&quot;&gt;&lt;span class=&quot;hljs-attr_selector&quot;&gt;[class*=&#39;col-&#39;]&lt;/span&gt; &lt;span class=&quot;hljs-rules&quot;&gt;{
    &lt;span class=&quot;hljs-rule&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;padding-left&lt;/span&gt;:&lt;span class=&quot;hljs-value&quot;&gt; &lt;span class=&quot;hljs-number&quot;&gt;20px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;
&lt;span class=&quot;hljs-rule&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;hljs-class&quot;&gt;.grille&lt;/span&gt; &lt;span class=&quot;hljs-rules&quot;&gt;{
    &lt;span class=&quot;hljs-rule&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;margin-left&lt;/span&gt;:&lt;span class=&quot;hljs-value&quot;&gt; -&lt;span class=&quot;hljs-number&quot;&gt;20px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;
&lt;span class=&quot;hljs-rule&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;Acte 3&lt;/h2&gt;

&lt;div class=&quot;assets&quot;&gt;
    &lt;blockquote&gt;
        Nous voudrions pouvoir nous laisser une option sur les gouttières extérieures, sous la forme d&#39;une classe CSS supplémentaire que nous pourons utiliser, ou non, pour activer ces gouttières. Implémentez cette classe &lt;code class=&quot;css&quot;&gt;.grille-espace&lt;/code&gt; en CSS (n&#39;oubliez pas de modifier votre HTML pour l&#39;utiliser).
    &lt;/blockquote&gt;
    &lt;pre&gt;&lt;code class=&quot;html hljs xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-value&quot;&gt;&quot;grille grille-espace&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-value&quot;&gt;&quot;col-2-3&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Contenu principal&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-title&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-value&quot;&gt;&quot;col-1-3&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Contenu latéral&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-title&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;proposition&quot; style=&quot;display: block;&quot;&gt;
    &lt;p&gt;Ajoutons d&#39;abord un &lt;code class=&quot;css&quot;&gt;padding&lt;/code&gt; latéral puis restorons la marge normale du &lt;em&gt;container&lt;/em&gt; que nous avons supprimé précédemment&amp;nbsp;:&lt;/p&gt;
        &lt;pre&gt;&lt;code class=&quot;css hljs&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;.grille&lt;/span&gt;&lt;span class=&quot;hljs-class&quot;&gt;.grille-espace&lt;/span&gt; &lt;span class=&quot;hljs-rules&quot;&gt;{
    &lt;span class=&quot;hljs-rule&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;margin-left&lt;/span&gt;:&lt;span class=&quot;hljs-value&quot;&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;
    &lt;span class=&quot;hljs-rule&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;padding-right&lt;/span&gt;:&lt;span class=&quot;hljs-value&quot;&gt; &lt;span class=&quot;hljs-number&quot;&gt;20px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;
&lt;span class=&quot;hljs-rule&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
        &lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2&gt;Interlude&lt;/h2&gt;
&lt;p&gt;
    Nous avançons bien mais il est parfois difficile de voir où nous en sommes, faute de mise en forme.
&lt;/p&gt;
&lt;div class=&quot;assets&quot;&gt;
    &lt;blockquote&gt;
        Utilisez le code CSS suivant pour y voir plus clair (adaptez à votre code) :
    &lt;/blockquote&gt;
    &lt;pre&gt;&lt;code class=&quot;css hljs&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;hljs-rules&quot;&gt;{
    &lt;span class=&quot;hljs-rule&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;:&lt;span class=&quot;hljs-value&quot;&gt; &lt;span class=&quot;hljs-hexcolor&quot;&gt;#446CB3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;
    &lt;span class=&quot;hljs-rule&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;color&lt;/span&gt;:&lt;span class=&quot;hljs-value&quot;&gt; &lt;span class=&quot;hljs-hexcolor&quot;&gt;#FFF&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;
&lt;span class=&quot;hljs-rule&quot;&gt;}&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;hljs-class&quot;&gt;.grille&lt;/span&gt; &lt;span class=&quot;hljs-rules&quot;&gt;{
    &lt;span class=&quot;hljs-rule&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;:&lt;span class=&quot;hljs-value&quot;&gt; &lt;span class=&quot;hljs-number&quot;&gt;2px&lt;/span&gt; dashed &lt;span class=&quot;hljs-function&quot;&gt;rgba&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0.3&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;
&lt;span class=&quot;hljs-rule&quot;&gt;}&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;hljs-attr_selector&quot;&gt;[class*=&#39;col-&#39;]&lt;/span&gt; &lt;span class=&quot;hljs-tag&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;hljs-rules&quot;&gt;{
    &lt;span class=&quot;hljs-rule&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;:&lt;span class=&quot;hljs-value&quot;&gt; &lt;span class=&quot;hljs-function&quot;&gt;rgba&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;225&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0.1&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;
    &lt;span class=&quot;hljs-rule&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;:&lt;span class=&quot;hljs-value&quot;&gt; &lt;span class=&quot;hljs-number&quot;&gt;2px&lt;/span&gt; solid &lt;span class=&quot;hljs-function&quot;&gt;rgba&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0.2&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;
    &lt;span class=&quot;hljs-rule&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;:&lt;span class=&quot;hljs-value&quot;&gt;block&lt;/span&gt;&lt;/span&gt;;
    &lt;span class=&quot;hljs-rule&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;padding&lt;/span&gt;:&lt;span class=&quot;hljs-value&quot;&gt; &lt;span class=&quot;hljs-number&quot;&gt;1rem&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;
    &lt;span class=&quot;hljs-rule&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;:&lt;span class=&quot;hljs-value&quot;&gt; &lt;span class=&quot;hljs-number&quot;&gt;1rem&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;
    &lt;span class=&quot;hljs-rule&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;font-size&lt;/span&gt;:&lt;span class=&quot;hljs-value&quot;&gt; &lt;span class=&quot;hljs-number&quot;&gt;0.9rem&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;
    &lt;span class=&quot;hljs-rule&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;font-weight&lt;/span&gt;:&lt;span class=&quot;hljs-value&quot;&gt; &lt;span class=&quot;hljs-number&quot;&gt;600&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;
&lt;span class=&quot;hljs-rule&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
    &lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2&gt;Acte 4&lt;/h2&gt;
&lt;p&gt;
    Notre grille est bien partie, mais il faut désormais ajouter d&#39;autres types de largeurs d&#39;éléments pour rendre notre mise-en-page flexible aux besoins.
&lt;/p&gt;
&lt;div class=&quot;assets&quot;&gt;
    &lt;blockquote&gt;
        Ajoutez des classes pour mettre en forme des contenu occupant ½, ¼ ou ⅙ de la largeur disponible. Pensez aussi aux contenus occupant ⅔, ¾, ⅚… N&#39;hésitez pas à modifier votre code HTML pour réaliser vos tests.
    &lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;solution&quot;&gt;
    &lt;p&gt;Essayez de mettre suffisament de contenu dans votre grille pour avoir au moins un, si c&#39;est plusieurs passages à la ligne. Que se passe-t-il ? Que se passerait-il si la valeur &lt;code class=&quot;css&quot;&gt;flex-grow&lt;/code&gt; n&#39;était pas à zéro ?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;proposition&quot; style=&quot;display: block;&quot;&gt;
    &lt;p&gt;Proposition de solution&amp;nbsp;:&lt;/p&gt;
        &lt;pre&gt;&lt;code class=&quot;css hljs&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;.col-1-2&lt;/span&gt; &lt;span class=&quot;hljs-rules&quot;&gt;{
    &lt;span class=&quot;hljs-rule&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;flex&lt;/span&gt;:&lt;span class=&quot;hljs-value&quot;&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;
&lt;span class=&quot;hljs-rule&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;hljs-class&quot;&gt;.col-1-4&lt;/span&gt; &lt;span class=&quot;hljs-rules&quot;&gt;{
    &lt;span class=&quot;hljs-rule&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;flex&lt;/span&gt;:&lt;span class=&quot;hljs-value&quot;&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;25%&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;
&lt;span class=&quot;hljs-rule&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;hljs-class&quot;&gt;.col-1-6&lt;/span&gt; &lt;span class=&quot;hljs-rules&quot;&gt;{
    &lt;span class=&quot;hljs-rule&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;flex&lt;/span&gt;:&lt;span class=&quot;hljs-value&quot;&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;16&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;66%&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;
&lt;span class=&quot;hljs-rule&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;proposition&quot; style=&quot;display: block;&quot;&gt;
    &lt;p&gt;Le nommage séparant les ½, ¼ ou ⅙ n&#39;est en effet pas pertinent, car il existe alors plusieurs manières d&#39;écrire la même chose. Par exemple, &quot;la moitié de la largeur&quot; peut être à la fois un demi, mais également trois sixièmes… C&#39;est pour cette raison que vous trouverez de nombreuses grilles organisées sur le &lt;abbr title=&quot;Plus Grand Commun Dénominateur&quot;&gt;PGCD&lt;/abbr&gt; de 2, 3 et 6&amp;nbsp;: 12.&lt;/p&gt;
&lt;/div&gt;

&lt;h2&gt;Acte 5&lt;/h2&gt;
&lt;p&gt;
    Appel de notre client: le deuxième contenu est en réalité un contenu à mettre en avant, alors que le premier contenu est, au contraire, à pousser en fin de grille…
&lt;/p&gt;
&lt;div class=&quot;assets&quot;&gt;
    &lt;blockquote&gt;
        Créez des classes CSS permettant la mise en avant ou en retrait d&#39;un contenu.
    &lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;solution&quot;&gt;
    &lt;p&gt;
        La propriété &lt;code class=&quot;css&quot;&gt;order&lt;/code&gt; &lt;sup id=&quot;cite-note-ressource5&quot;&gt;&lt;a href=&quot;#cite-ressource5&quot;&gt;[5]&lt;/a&gt;&lt;/sup&gt; est votre amie.
    &lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;proposition&quot; style=&quot;display: block;&quot;&gt;
    &lt;p&gt;L&#39;utilisation de &lt;code class=&quot;css&quot;&gt;order&lt;/code&gt; est extrêmement simple et n&#39;a pas d&#39;équivalent dans une autre méthode de création de grilles&amp;nbsp;:&lt;/p&gt;
    &lt;pre&gt;&lt;code class=&quot;hljs css&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/* Contenu ramené vers l&#39;avant */&lt;/span&gt;
&lt;span class=&quot;hljs-class&quot;&gt;.une&lt;/span&gt; &lt;span class=&quot;hljs-rules&quot;&gt;{
    &lt;span class=&quot;hljs-rule&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;order&lt;/span&gt;:&lt;span class=&quot;hljs-value&quot;&gt; -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;
&lt;span class=&quot;hljs-rule&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;hljs-comment&quot;&gt;/* contenu poussé vers la fin */&lt;/span&gt;
&lt;span class=&quot;hljs-class&quot;&gt;.retrait&lt;/span&gt; &lt;span class=&quot;hljs-rules&quot;&gt;{
    &lt;span class=&quot;hljs-rule&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;order&lt;/span&gt;:&lt;span class=&quot;hljs-value&quot;&gt; &lt;span class=&quot;hljs-number&quot;&gt;99&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;
&lt;span class=&quot;hljs-rule&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
    &lt;p&gt;&lt;a href=&quot;example/&quot; target=&quot;_blank&quot;&gt;Voir le premier &lt;em&gt;container&lt;/em&gt; de la démo&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;Acte 6&lt;/h2&gt;
&lt;p&gt;
    Après divers essai, le résultat n&#39;est pas jugé très satisfaisant&amp;nbsp;: quand les largeurs sont trop petits, le texte ne rentre plus. Le client voudrait que les contenus aient une largeur minimale tout en faisant en sorte qu&#39;ils passent automatiquement à la ligne si l&#39;espace n&#39;est plus suffisant. En revanche, il faudrait que les contenus exploitent l&#39;ensemble de la largeur qui leur sera alors disponible.
&lt;/p&gt;
&lt;div class=&quot;assets&quot;&gt;
    &lt;blockquote&gt;
        Changer la façon dont vous définissez les largeurs de vos contenus pour définir, à la place, une largeur de &lt;code class=&quot;css&quot;&gt;20em&lt;/code&gt;. En revanche, utilisez les paramètres de la propriété &lt;code class=&quot;css&quot;&gt;flex&lt;/code&gt; pour préciser que les contenus peuvent &quot;&lt;em&gt;s&#39;aggrandir&lt;/em&gt;&quot;.
    &lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;solution&quot;&gt;
    &lt;p&gt;
        Notons qu&#39;avec ce genre de modification, nous perdrons notre grille typographique. En revanche, nous gagnerons sur le ressenti utilisateur en terme de RWD sans pour autant avoir besoin de &lt;code class=&quot;css&quot;&gt;media queries&lt;/code&gt;.
    &lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;proposition&quot; style=&quot;display: block;&quot;&gt;
    &lt;p&gt;La proprité suivante, appliquée sur l&#39;ensemble des contenus, suffit. Elle explique à la fois la largeur minimum mais également la tendance à l&#39;aggrandissement si nécessaire, pour exploiter au mieux la largeur disponible&amp;nbsp;:&lt;/p&gt;
    &lt;pre&gt;&lt;code class=&quot;hljs css&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;.min-col-20&lt;/span&gt; &lt;span class=&quot;hljs-rules&quot;&gt;{ &lt;span class=&quot;hljs-rule&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;flex&lt;/span&gt;:&lt;span class=&quot;hljs-value&quot;&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;20em&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;; &lt;span class=&quot;hljs-rule&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
    &lt;p&gt;&lt;a href=&quot;example/&quot; target=&quot;_blank&quot;&gt;Voir le deuxième &lt;em&gt;container&lt;/em&gt; de la démo&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/main&gt;
&lt;footer&gt;
&lt;h1&gt;Ressources&lt;/h1&gt;
&lt;ol&gt;
    &lt;li id=&quot;cite-ressource1&quot;&gt;&lt;a href=&quot;#cite-note-ressource1&quot;&gt;^&lt;/a&gt; &lt;a href=&quot;https://developer.mozilla.org/fr/docs/Web/CSS/flex&quot;&gt;flex&lt;/a&gt;, sur &lt;a href=&quot;https://developer.mozilla.org/fr/&quot;&gt;MDN&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;cite-ressource2&quot;&gt;&lt;a href=&quot;#cite-note-ressource2&quot;&gt;^&lt;/a&gt; Il existe de nombreux générateurs de faux texte en ligne, plus ou moins proches du Lorem Ipsum. Par exemple&amp;nbsp;: &lt;a href=&quot;http://loripsum.net/&quot;&gt;LORIPSUM.NET&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;cite-ressource3&quot;&gt;&lt;a href=&quot;#cite-note-ressource3&quot;&gt;^&lt;/a&gt; &lt;a href=&quot;https://developer.mozilla.org/fr/docs/Web/CSS/box-sizing&quot;&gt;box-sizing&lt;/a&gt;, sur &lt;a href=&quot;https://developer.mozilla.org/fr/&quot;&gt;MDN&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;cite-ressource4&quot;&gt;&lt;a href=&quot;#cite-note-ressource4&quot;&gt;^&lt;/a&gt; Sur la base de la bonne pratique recommandée par &lt;a href=&quot;http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/&quot;&gt;Chris Coyier&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;cite-ressource5&quot;&gt;&lt;a href=&quot;#cite-note-ressource5&quot;&gt;^&lt;/a&gt; &lt;a href=&quot;https://developer.mozilla.org/fr/docs/Web/CSS/order&quot;&gt;order&lt;/a&gt;, sur &lt;a href=&quot;https://developer.mozilla.org/fr/&quot;&gt;MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/footer&gt;
</description>
        <pubDate>Thu, 01 Jan 2015 00:00:00 +0100</pubDate>
        <link>http://traindrop.github.io//fiches/003/</link>
        <guid isPermaLink="true">http://traindrop.github.io//fiches/003/</guid>
        
        
        <category>Responsive Web Design</category>
        
      </item>
    
      <item>
        <title>Construire une grille fluide avec &lt;code&gt;float&lt;/code&gt;</title>
        <description>&lt;main&gt;
&lt;h2&gt;Acte 1&lt;/h2&gt;

&lt;p&gt;Nous allons construire ensemble une grille fluide, c&#39;est-à-dire une CSS définissant une collection de classes qui nous permettront d&#39;organiser, au sein d&#39;un certain bloc, le contenu en colonnes et en gouttières. L&#39;idée est de pouvoir très simplement définir que tel contenu occupe ½, ⅓, ⅙&amp;#8230; de la largeur disponible, quelle que soit la largeur du &lt;code&gt;viewport&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Notre grille n&#39;occupera pas nécessairement tout l&#39;espace, mais peut-être qu&#39;une partie du site. Nous allons donc l&#39;embarquer dans un élément de type bloc, un &lt;em&gt;container&lt;/em&gt;, dont nous considérerons qu&#39;il est &quot;large à 100%&quot;, il sera la base de notre grille. Notez que si cet élément est le seul élément du &lt;code&gt;body&lt;/code&gt;, alors tout se passera comme si la grille occupait toute la largeur disponible car, par défaut, cet élément de type bloc occupera véritablement toute la largeur.&lt;/p&gt;
&lt;p&gt;Nous allons partir du code HTML suivant&amp;nbsp;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;div class=&amp;quot;grille&amp;quot;&amp;gt;
	&amp;lt;!-- 100% large --&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&quot;assets&quot;&gt;
	&lt;blockquote&gt;
		Mettez en place deux colonnes de contenu. Le contenu principal occupe ⅔ de la largeur disponible, le contenu latéral, ⅓.
	&lt;/blockquote&gt;
	&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;div class=&amp;quot;grille&amp;quot;&amp;gt;
	&amp;lt;div class=&amp;quot;col-2-3&amp;quot;&amp;gt;
		&amp;lt;p&amp;gt;Contenu principal&amp;lt;/p&amp;gt;
	&amp;lt;/div&amp;gt;
	&amp;lt;div class=&amp;quot;col-1-3&amp;quot;&amp;gt;
		&amp;lt;p&amp;gt;Contenu latéral&amp;lt;/p&amp;gt;
	&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;solution&quot;&gt;
	&lt;p&gt;Pour faire en sorte d&#39;afficher les deux zones l&#39;une à côté de l&#39;autre, il faut les faire flotter et leur appliquer des largeurs&amp;#8230;&lt;/p&gt;
	&lt;p&gt;Essayer de distinguer ce qui s&#39;applique véritablement à un élément affichant une certaine classe (par exemple, &lt;code class=&quot;css&quot;&gt;.col-1-3&lt;/code&gt;) de ce qui s&#39;appliquera à l&#39;ensemble des classes de type &lt;code class=&quot;css&quot;&gt;.col-{quelque chose}&lt;/code&gt;. Comment adresser l&#39;ensemble de ces classes avec une seule règle CSS&amp;nbsp;?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;proposition&quot;&gt;
	&lt;p&gt;Proposition de solution&amp;nbsp;:&lt;/p&gt;
		&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;[class*=&#39;col-&#39;] {
	float: left;
}

.col-2-3 {
	width: 66.66%;
}

.col-1-3 {
	width: 33.33%;
}
		&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2&gt;Acte 2&lt;/h2&gt;
&lt;p&gt;
	Si vous remplacez les contenus par du Lorem Ipsum &lt;sup id=&quot;cite-note-ressource1&quot;&gt;&lt;a href=&quot;#cite-ressource1&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt;, par exemple, vous allez vite vous rendre compte d&#39;un problème&amp;nbsp;: le texte d&#39;un élément continue jusqu&#39;au contenu suivant, ce qui n&#39;est pas très agréable à l&#39;oeil. Nous allons donc mettre en place des gouttières de 20px, qui permettront d&#39;aérer le contenu.&lt;/p&gt;
&lt;p&gt;
&lt;div class=&quot;assets&quot;&gt;
	&lt;blockquote&gt;
		Définissez des gouttières de 20px de large entre les contenus. Attention, les gouttières ne sont qu&#39;entre les contenus&amp;#8230; ni à gauche, ni à droite de la grille.
	&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;solution&quot;&gt;
	&lt;p&gt;Vous rencontrez des problèmes pour faire rentrer vos contenus en largeur ? C&#39;est normal, c&#39;est à cause du modèle de boîtes par défaut. Pour simplifier la mise en place, appliquez à l&#39;ensemble des éléments la règle &lt;code class=&quot;html&quot;&gt;box-sizing: border-box;&lt;/code&gt; &lt;sup id=&quot;cite-note-ressource2&quot;&gt;&lt;a href=&quot;#cite-ressource2&quot;&gt;[2]&lt;/a&gt;&lt;/sup&gt; afin que la largeur définie d&#39;un contenu soit véritablement sa largeur, indépendamment des &lt;code class=&quot;html&quot;&gt;padding&lt;/code&gt; et des &lt;code class=&quot;html&quot;&gt;border&lt;/code&gt; appliqués.&lt;/p&gt;
	&lt;figure&gt;
		&lt;img src=&quot;assets/with-box-model.png&quot; alt=&quot;Description visuelle de l&#39;impact de box-sizing: border-box;&quot; width=&quot;704&quot; height=&quot;504&quot;&gt;
		&lt;figcaption&gt;Avec &lt;code&gt;box-sizing: border-box;&lt;/code&gt; les bordures et les paddings sont dessinés à l&#39;intérieur de la largeur de contenu définie. Les marges sont dessinées à l&#39;extérieur. Original par &lt;a href=&quot;http://www.adamkaplan.me/grid/&quot;&gt;Adam Kaplan&lt;/a&gt;&lt;/figcaption&gt;.
	&lt;/figure&gt;
&lt;/div&gt;
&lt;div class=&quot;proposition&quot;&gt;
	&lt;p&gt;Proposition de solution pour la mise en place de  &lt;code class=&quot;html&quot;&gt;box-sizing: border-box;&lt;/code&gt; &lt;sup id=&quot;cite-note-ressource3&quot;&gt;&lt;a href=&quot;#cite-ressource3&quot;&gt;[3]&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;
		&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;html {
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
}
*, *:before, *:after {
	box-sizing: inherit;
}
		&lt;/code&gt;&lt;/pre&gt;
	&lt;p&gt;Puis pour la mise en place des gouttières&amp;nbsp;:&lt;/p&gt;
		&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;[class*=&#39;col-&#39;] {
	padding-right: 20px;
}
[class*=&#39;col-&#39;]:last-of-type {
	padding-right: 0;
}
		&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2&gt;Acte 3&lt;/h2&gt;

&lt;div class=&quot;assets&quot;&gt;
	&lt;blockquote&gt;
		Nous voudrions pouvoir nous laisser une option sur les gouttières extérieures, sous la forme d&#39;une classe CSS supplémentaire que nous pourons utiliser, ou non, pour activer ces gouttières. Implémentez cette classe &lt;code class=&quot;css&quot;&gt;.grille-espace&lt;/code&gt; en CSS (n&#39;oubliez pas de modifier votre HTML pour l&#39;utiliser).
	&lt;/blockquote&gt;
	&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;div class=&amp;quot;grille grille-espace&amp;quot;&amp;gt;
	&amp;lt;div class=&amp;quot;col-2-3&amp;quot;&amp;gt;
		&amp;lt;p&amp;gt;Contenu principal&amp;lt;/p&amp;gt;
	&amp;lt;/div&amp;gt;
	&amp;lt;div class=&amp;quot;col-1-3&amp;quot;&amp;gt;
		&amp;lt;p&amp;gt;Contenu latéral&amp;lt;/p&amp;gt;
	&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
	&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;proposition&quot;&gt;
	&lt;p&gt;Ajoutons d&#39;abord le &lt;code class=&quot;css&quot;&gt;padding&lt;/code&gt; à gauche&amp;nbsp;:&lt;/p&gt;
		&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;.grille-espace {
	padding-left: 20px;
}
		&lt;/code&gt;&lt;/pre&gt;
	&lt;p&gt;Puis nous restorons éventuellement la gouttière de droite que nous avons supprimé précédemment&amp;nbsp;:&lt;/p&gt;
		&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;.grille-espace &gt; [class*=&#39;col-&#39;]:last-of-type {
	padding-right: 20px;
}
		&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2&gt;Acte 4&lt;/h2&gt;

&lt;div class=&quot;assets&quot;&gt;
	&lt;blockquote&gt;
		Nous voudrions également pouvoir nous laisser une option sur l&#39;alignement, afin de pouvoir caler des contenu sur la droite, par exemple, même si aucun contenu ne le précède à gauche. Implémentez en CSS une classe &lt;code class=&quot;css&quot;&gt;.oppose&lt;/code&gt; (n&#39;oubliez pas de modifier votre HTML pour l&#39;utiliser).
	&lt;/blockquote&gt;
	&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;div class=&amp;quot;grille&amp;quot;&amp;gt;
	&amp;lt;div class=&amp;quot;col-1-3 oppose&amp;quot;&amp;gt;
		&amp;lt;p&amp;gt;Contenu calé à droite&amp;lt;/p&amp;gt;
	&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
	&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;proposition&quot;&gt;
	&lt;p&gt;Proposition de solution&amp;nbsp;:&lt;/p&gt;
		&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;.oppose {
	float: right;
}
		&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2&gt;Acte 5&lt;/h2&gt;
&lt;p&gt;
	Nous avançons bien mais il est parfois difficile de voir où nous en sommes, faute de mise en forme.
&lt;/p&gt;
&lt;div class=&quot;assets&quot;&gt;
	&lt;blockquote&gt;
		Utilisez le code CSS suivant pour y voir plus clair (adaptez à votre code) :
	&lt;/blockquote&gt;
	&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;body{
	background-color: #446CB3;
	color: #FFF;
}

.grille {
	border: 2px dashed rgba(255,255,255,0.3);
}

[class*=&#39;col-&#39;] p {
	background: rgba(225,255,255,0.1);
	border: 2px solid rgba(255,255,255,0.2);
	display:block;
	padding: 1rem;
	margin: 1rem 0;
	font-size: 0.9rem;
	font-weight: 600;
}
	&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;solution&quot;&gt;
	&lt;p&gt;Que se passe-t-il ? Pouvez-vous l&#39;expliquer et comment résoudre ce problème ?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;proposition&quot;&gt;
	&lt;p&gt;Nous allons ajouter une notion à notre code HTML, celle de &lt;i&gt;ligne&lt;/i&gt;&amp;nbsp;:&lt;/p&gt;
	&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;div class=&amp;quot;grille grille-espace&amp;quot;&amp;gt;
	&amp;lt;div class=&amp;quot;ligne&amp;quot;&amp;gt;
		&amp;lt;div class=&amp;quot;col-2-3&amp;quot;&amp;gt;
			&amp;lt;p&amp;gt;Contenu principal&amp;lt;/p&amp;gt;
		&amp;lt;/div&amp;gt;
		&amp;lt;div class=&amp;quot;col-1-3&amp;quot;&amp;gt;
			&amp;lt;p&amp;gt;Contenu latéral&amp;lt;/p&amp;gt;
		&amp;lt;/div&amp;gt;
	&amp;lt;/div&amp;gt;
	&amp;lt;div class=&amp;quot;ligne&amp;quot;&amp;gt;
		&amp;lt;div class=&amp;quot;col-2-3 oppose&amp;quot;&amp;gt;
			&amp;lt;p&amp;gt;Contenu latéral&amp;lt;/p&amp;gt;
		&amp;lt;/div&amp;gt;
	&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
	&lt;/code&gt;&lt;/pre&gt;
	&lt;p&gt;Reste à expliquer aux éléments quel espace considérer. Une solution parmi d&#39;autres est d&#39;ajouter un pseudo élément à la fin de chaque ligne, de type &lt;code&gt;block&lt;/code&gt; (par défaut, le type d&#39;un pseudo-élément est &lt;code&gt;inline&lt;/code&gt;). Cela va permettre au navigateur de considérer la valeur renseignée comme un bloc : nous aurons donc, avant et après chaque ligne, deux blocs invisibles attachés. Ensuite, sur ces blocs, on peut appliquer un &lt;code&gt;clear: both;&lt;/code&gt;, qui dégage ces blocs du flux flottant.&lt;/p&gt;
	&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;.ligne:before,
.ligne:after {
	content:&quot; &quot;;
	display: block;
	clear: both;
}
	&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2&gt;Acte 6&lt;/h2&gt;
&lt;p&gt;
	Notre grille est bien partie, mais il faut désormais ajouter d&#39;autres types de largeurs d&#39;éléments pour rendre notre mise-en-page flexible aux besoins.
&lt;/p&gt;
&lt;div class=&quot;assets&quot;&gt;
	&lt;blockquote&gt;
		Ajoutez des classes pour mettre en forme des contenu occupant ½, ¼ ou ⅙ de la largeur disponible. Pensez aussi aux contenus occupant ⅔, ¾, ⅚&amp;#8230; N&#39;hésitez pas à modifier votre code HTML pour réaliser vos tests.
	&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;solution&quot;&gt;
	&lt;p&gt;On essaie souvent d&#39;avoir des systèmes de grilles fluides permettant aux contenus d&#39;occuper des moitiés, des quarts ou des sixièmes de la largeur disponible. Dans ce contexte, notre nommage de classes est-il pertinent, n&#39;entrainera-t-il pas des ambiguïtés&amp;nbsp;? Que pourrait-on proposer de mieux&amp;nbsp;?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;proposition&quot;&gt;
	&lt;p&gt;Proposition de solution&amp;nbsp;:&lt;/p&gt;
		&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;.col-1-2 {
	width: 50%;
}
.col-1-4 {
	width: 25%;
}
.col-1-6 {
	width: 16,66%;
}
		&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;proposition&quot;&gt;
	&lt;p&gt;Le nommage séparant les ½, ¼ ou ⅙ n&#39;est en effet pas pertinent, car il existe alors plusieurs manières d&#39;écrire la même chose. Par exemple, &quot;la moitié de la largeur&quot; peut être à la fois un demi, mais également trois sixièmes&amp;#8230; C&#39;est pour cette raison que vous trouverez de nombreuses grilles organisées sur le &lt;abbr title=&quot;Plus Grand Commun Dénominateur&quot;&gt;PGCD&lt;/abbr&gt; de 2, 3 et 6&amp;nbsp;: 12.&lt;/p&gt;
&lt;/div&gt;

&lt;h2&gt;Acte 7&lt;/h2&gt;
&lt;p&gt;
	Notre grille est prête, mais bien que flexible au sens &lt;abbr title=&quot;Responsive Web Design&quot;&gt;RWD&lt;/abbr&gt;, elle ne l&#39;est pas énormément en termes de maintenance&amp;#8230;
&lt;/p&gt;
&lt;div class=&quot;assets&quot;&gt;
	&lt;blockquote&gt;
		Que se passerait-il demain si nous voulions modifier la largeur de nos gouttières&amp;nbsp;? Proposez une solution pour rendre la maintenance de ce paramètre plus simple. Quels impacts sur le processus de développement&amp;nbsp;?
	&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;solution&quot;&gt;
	&lt;p&gt;
		Il existe, dans le monde du développement CSS, la notion de pré ou de post-processeurs. Peuvent-ils aider&amp;nbsp;? Comment&amp;nbsp;? Est-ce lourd à mettre en place et que cela change-t-il dans un projet en termes de maintenance et de facilité de lecture&amp;nbsp;?
	&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;proposition&quot;&gt;
	&lt;p&gt;Les pré et post processeur CSS permettent de réaliser des opérations amenant à du CSS (à partir d&#39;un autre langage) ou étendant le CSS après son écriture. Leur utilisation n&#39;est ni bonne, ni mauvaise&amp;nbsp;: elle dépend du contexte. En revanche, elle implique de travailler au sein d&#39;une équipe parfaitement consciente des usages et qui maitrise ces outils. La courbe d&#39;apprentissage, pour un nouvel arrivant, sera plus importante que s&#39;il n&#39;y avait pas ces outils&amp;nbsp;: il faut donc s&#39;assurer qu&#39;en contre-partie, le temps gagné à l&#39;usage est supérieur.&lt;/p&gt;
	&lt;p&gt;Proposition de solution en SCSS (&lt;a href=&quot;example/&quot; target=&quot;_blank&quot;&gt;voir la démo&lt;/a&gt;)&amp;nbsp;:&lt;/p&gt;
		&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;/* Gestion du modèle de boite */
/* Bonnes pratiques : http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/ */
html {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}

*, *:before, *:after {
	box-sizing: inherit;
}

/* Taille des gouttières */
$gouttiere: 20px;

/* Règles pour la mise en forme */
body {
	background-color: #446CB3;
	color: #FFF;

	.grille {
		border: 2px dashed rgb(255, 255, 255);
		border: 2px dashed rgba(255, 255, 255, 0.3);
	}

	[class*=&#39;col-&#39;] p {
		background: rgba(225, 255, 255, 0.1);
		border: 2px solid rgb(255, 255, 255);
		border: 2px solid rgba(255, 255, 255, 0.2);
		display: block;
		padding: 1rem;
		margin: 1rem 0;
		font-size: 0.9rem;
		font-weight: 600;
	}
}

.grille {
	[class*=&#39;col-&#39;] {
		float: left;

		&amp;.oppose {
			float: right;
		}
	}

	/* Sur 12 colonnes */
	@for $i from 1 through 11 {
		.col-#{$i}-12 {
			width: (100% / 12) * $i;
		}
	}

	/* Sur 3 colonnes */
	@for $i from 1 through 2 {
		.col-#{$i}-3 {
			width: (100% / 3) * $i;
		}
	}

	[class*=&#39;col-&#39;] {
		padding-right: $gouttiere;
	}
	[class*=&#39;col-&#39;]:last-of-type {
		padding-right: 0;
	}

	.ligne {
		&amp;:before,
		&amp;:after {
			content: &quot; &quot;;
			display: block;
			clear: both;
		}
	}

	/* Espaces extérieur */
	&amp;.grille-espace {
		padding-left: $gouttiere;

		[class*=&#39;col-&#39;]:last-of-type {
			padding-right: $gouttiere;
		}
	}
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2&gt;Acte 8&lt;/h2&gt;
&lt;p&gt;
	Nous disposons désormais d&#39;une grille efficace. Mettons-là en condition réelles.
&lt;/p&gt;
&lt;div class=&quot;assets&quot;&gt;
	&lt;blockquote&gt;
		Voici un schéma présentant les contenus de notre site.
	&lt;/blockquote&gt;
	&lt;img src=&quot;assets/content_grid.png&quot; width=&quot;975&quot; height=&quot;1270&quot; alt=&quot;Exemple de mise en page sur grille à 12 colonnes&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;solution&quot;&gt;
	&lt;p&gt;
		Commencez par critiquer la mise-en-forme fournie. Vous semble-t-elle cohérente par rapport à la grille sur laquelle elle se repose ?
	&lt;/p&gt;
	&lt;p&gt;
		Utilisez une grille fluide pour mettre en forme votre mise-en-page corrigée.
	&lt;/p&gt;
&lt;/div&gt;
&lt;/main&gt;
&lt;footer&gt;
&lt;h1&gt;Ressources&lt;/h1&gt;
&lt;ol&gt;
	&lt;li id=&quot;cite-ressource1&quot;&gt;&lt;a href=&quot;#cite-note-ressource1&quot;&gt;^&lt;/a&gt; Il existe de nombreux générateurs de faux texte en ligne, plus ou moins proches du Lorem Ipsum. Par exemple&amp;nbsp;: &lt;a href=&quot;http://loripsum.net/&quot;&gt;LORIPSUM.NET&lt;/a&gt;&lt;/li&gt;
	&lt;li id=&quot;cite-ressource2&quot;&gt;&lt;a href=&quot;#cite-note-ressource2&quot;&gt;^&lt;/a&gt; &lt;a href=&quot;https://developer.mozilla.org/fr/docs/Web/CSS/box-sizing&quot;&gt;box-sizing&lt;/a&gt;, sur &lt;a href=&quot;https://developer.mozilla.org/fr/&quot;&gt;MDN&lt;/a&gt;&lt;/li&gt;
	&lt;li id=&quot;cite-ressource3&quot;&gt;&lt;a href=&quot;#cite-note-ressource3&quot;&gt;^&lt;/a&gt; Sur la base de la bonne pratique recommandée par &lt;a href=&quot;http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/&quot;&gt;Chris Coyier&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/footer&gt;
</description>
        <pubDate>Thu, 01 Jan 2015 00:00:00 +0100</pubDate>
        <link>http://traindrop.github.io//fiches/002/</link>
        <guid isPermaLink="true">http://traindrop.github.io//fiches/002/</guid>
        
        
        <category>Responsive Web Design</category>
        
      </item>
    
      <item>
        <title>Créer un lien sur tout un bloc HTML</title>
        <description>&lt;main&gt;
&lt;h2&gt;Acte 1&lt;/h2&gt;
&lt;p&gt;Vous recevez de la part de votre chef de projet la maquette ci-dessous, avec la consigne suivante :&lt;/p&gt;
&lt;div class=&quot;assets&quot;&gt;
	&lt;blockquote&gt;Voici la maquette pour le nouvel encart d’article à intégrer sur le site. Il faudra bien faire en sorte que tout l’encart soit cliquable.&lt;/blockquote&gt;
	&lt;img src=&quot;assets/maquette.jpg&quot; alt=&quot;&quot; width=&quot;369&quot; height=&quot;392&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;solution&quot;&gt;
	&lt;p&gt;Comment faire un lien sur tout un bloc&amp;nbsp;?&lt;/p&gt;
&lt;/div&gt;

&lt;h2&gt;Acte 2&lt;/h2&gt;
&lt;p&gt;À l’aide du code HTML suivant, rendez tout son contenu cliquable vers la page &lt;code&gt;http://www.theverge.com/2014/9/5/6108947/moto-360-review&lt;/code&gt;. Comparez les avantages et inconvénients de chaque solution.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;div class=&amp;quot;post&amp;quot;&amp;gt;
&amp;lt;img class=&amp;quot;post-img&amp;quot; alt=&amp;quot;Moto 360&amp;quot; src=&amp;quot;http://cdn2.vox-cdn.com/uploads/chorus_image/image/38013858/DSCF4522-2040.0.0_standard_300.0.jpg&amp;quot; width=&amp;quot;300&amp;quot; height=&amp;quot;199&amp;quot; /&amp;gt;
&amp;lt;h1 class=&amp;quot;post-title&amp;quot;&amp;gt;&amp;lt;a class=&amp;quot;post-link&amp;quot; href=&amp;quot;http://www.theverge.com/2014/9/5/6108947/moto-360-review&amp;quot;&amp;gt;Moto 360 review&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt;
&amp;lt;p class=&amp;quot;post-author&amp;quot;&amp;gt;By David Pierce&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;solution&quot;&gt;
	&lt;p&gt;Quelles solutions pourrait-on envisager&amp;nbsp;? Essayez d&#39;exploiter plusieurs pistes&amp;nbsp;: HTML, CSS, JS&amp;#8230;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;proposition&quot;&gt;
	&lt;p&gt;&lt;strong&gt;En JavaScript&lt;/strong&gt;, on peut ajouter un événement au clic de chaque &lt;code class=&quot;css&quot;&gt;.post&lt;/code&gt;.&lt;/p&gt;
	&lt;pre&gt;&lt;code class=&quot;js&quot;&gt;document.addEventListener(&#39;DOMContentLoaded&#39;, function() {
var items = document.querySelectorAll(&#39;.post&#39;);
for(var i=0; i &lt; items.length; i++) {
	var item = items[i];
	item.addEventListener(&#39;click&#39;, function() {
		var postLinks = this.querySelectorAll(&#39;.post-link&#39;);
		if(postLinks.length &gt; 0)
		{
			url = postLinks[0].getAttribute(&#39;href&#39;);
			window.location = url;
		}
	});
}
});&lt;/code&gt;&lt;/pre&gt;
	&lt;p&gt;&lt;strong&gt;Avec jQuery&lt;/strong&gt;, on peut écrire ça plus simplement&amp;nbsp;:&lt;/p&gt;
	&lt;pre&gt;&lt;code class=&quot;js&quot;&gt;$(document).ready(function() {
$(&#39;.post&#39;).click(function(e) {
	var url = $(this).find(&#39;.post-link&#39;).eq(0).attr(&#39;href&#39;);
	window.location = url;
});
});&lt;/code&gt;&lt;/pre&gt;
	&lt;p&gt;Ces solutions sont bonnes pour l&#39;accessibilité, l&#39;intéropérabilité et le référencement, mais moins pour l&#39;expérience utilisateur (car on désactive des fonctionnalités de clics secondaires par exemple).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;proposition&quot;&gt;
	&lt;p&gt;&lt;strong&gt;En HTML 5&lt;/strong&gt;, on peut ajouter un lien autour de tout un &lt;code&gt;block&lt;/code&gt;.&lt;/p&gt;
	&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;a class=&amp;quot;post-link&amp;quot; href=&amp;quot;http://www.theverge.com/2014/9/5/6108947/moto-360-review&amp;quot;&amp;gt;
&amp;lt;div class=&amp;quot;post&amp;quot;&amp;gt;
	&amp;lt;img class=&amp;quot;post-img&amp;quot; alt=&amp;quot;Moto 360&amp;quot; src=&amp;quot;http://cdn2.vox-cdn.com/uploads/chorus_image/image/38013858/DSCF4522-2040.0.0_standard_300.0.jpg&amp;quot; width=&amp;quot;300&amp;quot; height=&amp;quot;199&amp;quot; /&amp;gt;
	&amp;lt;h1 class=&amp;quot;post-title&amp;quot;&amp;gt;Moto 360 review&amp;lt;/h1&amp;gt;
	&amp;lt;p class=&amp;quot;post-author&amp;quot;&amp;gt;By David Pierce&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/pre&gt;
	&lt;p&gt;Cette solution est bonne pour l&#39;expérience utilisateur (car toute la zone sera bien cliquable). Mais elle moins bonne pour l&#39;accessibilité et le référencement (car il y a trop de contenus textes dans le lien) ou l&#39;intéropérabilité (car elle ne fonctionne
		qu&#39;à partir d&#39;IE9).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;proposition&quot;&gt;
	&lt;p&gt;&lt;strong&gt;En CSS&lt;/strong&gt;, on peut utiliser un pseudo-élément &lt;sup id=&quot;cite-note-ressource1&quot;&gt;&lt;a href=&quot;#cite-ressource1&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt; sur la balise &lt;code class=&quot;html&quot;&gt;&amp;lt;a&amp;gt;&lt;/code&gt;, positionné ensuite pour recouvrir tout le &lt;code class=&quot;css&quot;&gt;.post&lt;/code&gt;.&lt;/p&gt;
	&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;.post {
/* définit le contexte du
positionnement absolu des
éléments enfants */
position: relative;
}
.post-link:before {
content:&#39;&#39;;
position:absolute;
left:0;
right:0;
top:0;
bottom:0;
background-color:rgba(0,0,0,0);
}&lt;/code&gt;&lt;/pre&gt;
	&lt;p&gt;Cette solution est bonne pour l&#39;accessibilité, le référencement et l&#39;expérience utilisateur. Pour l&#39;intéropérabilité, cette solution fonctionne bien à partir d&#39;IE9 sur l&#39;ensemble de la zone, et à partir d&#39;IE8 sur les contenus images et textes uniquement.&lt;/p&gt;
&lt;/div&gt;

&lt;h2&gt;Acte 3&lt;/h2&gt;
&lt;p class=&quot;note&quot;&gt;Vous venez de recevoir une nouvelle précision de la part de votre chef de projet&amp;nbsp;:&lt;/p&gt;
&lt;div class=&quot;assets&quot;&gt;
	&lt;blockquote&gt;Au fait, il faudrait que le nom de l’auteur soit lui-aussi cliquable et ramène vers la page de l’auteur (&lt;code&gt;http://www.theverge.com/users/piercedavid&lt;/code&gt;).&lt;/blockquote&gt;
&lt;/div&gt;
&lt;p&gt;Quelles solutions se prêtent le mieux à cette modification ?&lt;/p&gt;

&lt;div class=&quot;proposition&quot;&gt;
	&lt;p&gt;&lt;strong&gt;En CSS&lt;/strong&gt;, il faut donner un contexte d&#39;empilement &lt;sup id=&quot;cite-note-ressource2&quot;&gt;&lt;a href=&quot;#cite-ressource2&quot;&gt;[2]&lt;/a&gt;&lt;/sup&gt; au lien placé sur l&#39;auteur.&lt;/p&gt;
	&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;.post-author a {
position:relative;
z-index:1;
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/main&gt;


&lt;footer&gt;
&lt;h1&gt;Ressources&lt;/h1&gt;
&lt;ol&gt;
	&lt;li id=&quot;cite-ressource1&quot;&gt;&lt;a href=&quot;#cite-note-ressource1&quot;&gt;^&lt;/a&gt; &lt;a href=&quot;https://developer.mozilla.org/fr/docs/Web/CSS/:before&quot;&gt;:before&lt;/a&gt;, sur &lt;a href=&quot;https://developer.mozilla.org/fr/&quot;&gt;MDN&lt;/a&gt;&lt;/li&gt;
	&lt;li id=&quot;cite-ressource2&quot;&gt;&lt;a href=&quot;#cite-note-ressource2&quot;&gt;^&lt;/a&gt; &lt;a href=&quot;http://iamvdo.me/blog/comprendre-z-index-et-les-contextes-dempilement&quot;&gt;Comprendre z-index et les contextes d&#39;empilement&lt;/a&gt;, par &lt;a href=&quot;http://iamvdo.me/&quot;&gt;Vincent de Oliveira&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/footer&gt;
</description>
        <pubDate>Thu, 01 Jan 2015 00:00:00 +0100</pubDate>
        <link>http://traindrop.github.io//fiches/001/</link>
        <guid isPermaLink="true">http://traindrop.github.io//fiches/001/</guid>
        
        
        <category>Accessibilité</category>
        
        <category>Interopérabilité</category>
        
        <category>Référencement</category>
        
      </item>
    
  </channel>
</rss>
